/*	update : 1.14
 *  updated date : 06/06
 *  updated user : pjh
 *  contents : 기능 추가 (미용사 삭제)
 */
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Array;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class App {	// 프로그램을 실행하는 class
	public static void main(String[] args) {
		new Program();
	}
}

class Program extends JFrame implements ActionListener {	// 화면의 첫 화면을 나타내는 class
	JButton btn1 = null;	JButton btn2 = null;
	JButton btn3 = null;	JButton btn4 = null;
	JButton btn5 = null;	JButton btn6 = null;
	JTable table = null;

	public Program() {	
		super("헤어샵 예약프로그램");
		this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		this.setBounds(200, 200, 800, 400);
		this.setLayout(new FlowLayout());

		JPanel panelComboBox = new JPanel();
		JPanel panelList = new JPanel();
		JPanel panelTable = new JPanel();
		JPanel panelNormal = new JPanel();

		panelComboBox.setLayout(new FlowLayout());
		panelList.setLayout(new FlowLayout());
		panelTable.setLayout(new FlowLayout());
		panelNormal.setLayout(new FlowLayout());

		String title[] = {"회원 이름","전화번호","예약날짜","예약시간","머리 종류","당담 미용사"};	// 회원 title 이름 저장
		
		String data[][] = new String[0][0];	//회원 정보

		table = new JTable(data, title);
		JScrollPane sp = new JScrollPane(table);
		sp.setPreferredSize(new Dimension(500, 200));	// 회원 title 크기

		panelTable.add(sp);
		
		btn1 = new JButton("예약 등록");
		btn1.addActionListener(this);
		panelNormal.add(btn1);

		btn2 = new JButton("예약 삭제");
		btn2.addActionListener(this);
		panelNormal.add(btn2);

		btn3 = new JButton("예약 출력");
		btn3.addActionListener(this);
		panelNormal.add(btn3);

		btn4 = new JButton("미용사 등록");
		btn4.addActionListener(this);
		panelNormal.add(btn4);
		
		btn5 = new JButton("미용사  출력");
		btn5.addActionListener(this);
		panelNormal.add(btn5);

		// 패널 연결
		this.add(panelComboBox);
		this.add(panelList);
		this.add(panelTable);
		this.add(panelNormal);

		this.setVisible(true);
	}

	public void refreshTable() {	//	title에 들어갈 정보
		String titleTemp[]  =  {"회원 이름","예약날짜","예약시간","머리 종류","담당 미용사"};

		int size = ClientManager.list.size();
		String[][] clientDataArray = new String[size][titleTemp.length];

		for (int i = 0; i < size; i++) {	//저장되어 있는 만큼 정보 출력
			Client clientData = ClientManager.list.get(i);
			clientDataArray[i][0] = clientData.name;
			clientDataArray[i][1] = String.valueOf(clientData.time);
			clientDataArray[i][2] = clientData.hairShape;
			clientDataArray[i][3] = clientData.designer;
		}
		table.setModel(new DefaultTableModel(clientDataArray, titleTemp));
	}
	@Override
	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == btn1) {	//예약 등록
			new reserveClient();
		}
		if (e.getSource() == btn2) {	//예약 삭제
			if (table.getSelectedRow() == -1) {		
			} else {
				int deleteIndex = table.getSelectedRow();
				ClientManager.list.remove(deleteIndex);
				this.refreshTable();
			}
		}
		if (e.getSource() == btn3) {	//예약 출력
			String titleTemp[] = {"회원 이름","전화번호","예약날짜","예약시간","머리 모양","당담 미용사"};

			int size = ClientManager.list.size();
			String[][] clientDataArray = new String[size][titleTemp.length];

			for (int i = 0; i < size; i++) {	//고객 정보 출력
				Client clientData = ClientManager.list.get(i);
				clientDataArray[i][0] = clientData.name;
				clientDataArray[i][1] = clientData.number;
				clientDataArray[i][2] = String.valueOf(clientData.date);
				clientDataArray[i][3] = String.valueOf(clientData.time);
				clientDataArray[i][4] = clientData.hairShape;
				clientDataArray[i][5] = clientData.designer;
			}

			table.setModel(new DefaultTableModel(clientDataArray, titleTemp));
		}
		if (e.getSource() == btn4) {	//미용사 등록
			new InputDesigner();
		}
		if (e.getSource() == btn5) {	//미용사 출력
			new printDesigner();
		}
	}

}
class printDesigner extends JFrame implements ActionListener {	//미용사 예약 출력
	JButton btn1 = null;
	JButton btn2 = null;
	JTable table = null;
	JTable table2 = null;

	ArrayList<Client> client_list;	//고객 정보
	public printDesigner() {
		super("미용사별 예약관리");
		this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		this.setBounds(200, 200, 500, 600);
		this.setLayout(new FlowLayout());

		JPanel panelPrint = new JPanel();
		JPanel panelButton = new JPanel();
		JPanel panelRelated = new JPanel();

		panelPrint.setLayout(new FlowLayout());
		panelButton.setLayout(new FlowLayout());
		panelRelated.setLayout(new FlowLayout());

		String title[] = new String[2];
		title[0] = "이름";
		title[1] = "사번";

		int size = DesignerManager.list.size();			
		String[][] dataProArray = new String[size][2];

		for (int i = 0; i < size; i++) {	//디자이너 정보 출력
			Designer dataPro = DesignerManager.list.get(i);
			dataProArray[i][0] = dataPro.name;
			dataProArray[i][1] = dataPro.number;
		}

		table = new JTable(dataProArray, title);
		JScrollPane sp = new JScrollPane(table);
		sp.setPreferredSize(new Dimension(300, 200));
		panelPrint.add(sp);

		btn1 = new JButton("관련 회원 정보 출력");
		btn1.addActionListener(this);
		panelButton.add(btn1);

		btn2 = new JButton("확인");
		btn2.addActionListener(this);
		panelButton.add(btn2);

		String data[][] = new String[0][0];
		table2 = new JTable(data,title);
		JScrollPane sp2 = new JScrollPane(table2);
		sp2.setPreferredSize(new Dimension(300, 200));
		panelRelated.add(sp2);

		this.add(panelPrint);
		this.add(panelButton);
		this.add(panelRelated);
		this.setVisible(true);
	}

	public void refreshTable(){	//title
		String titleTemp[] = {"회원 이름","전화번호","예약날짜","예약시간","머리 모양"};
		int size = client_list.size();
		String[][] clientDataArray = new String[size][5];

		for (int i = 0; i < size; i++) {	//고객 정보 출력
			Client clientData = client_list.get(i);
			clientDataArray[i][0] = clientData.name;
			clientDataArray[i][1] = clientData.number;
			clientDataArray[i][2] = String.valueOf(clientData.date);
			clientDataArray[i][3] = String.valueOf(clientData.time);
			clientDataArray[i][4] = clientData.hairShape;
		}
		table2.setModel(new DefaultTableModel(clientDataArray, titleTemp));
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==btn1){
			if (table.getSelectedRow() == -1) {
			} else {
				int deleteIndex = table.getSelectedRow();
				Designer temp = DesignerManager.list.get(deleteIndex);
				client_list = new ArrayList<Client>();
				for(Client s : ClientManager.list){
					if(s.designer.equals(temp.name)){
						client_list.add(s);
					}
				}
				this.refreshTable();
			}
		}
		if(e.getSource()==btn2){
			dispose();
		}
	}
}

class reserveClient extends JFrame implements ActionListener {
	public int ch = 0, ct = 0;
	JLabel name, time, designer, hair_shape, number, reyear, remon, reday, caution;
	JTextField name_t, number_t, reyear_t, remon_t, reday_t;
	JComboBox time_combo;
	JComboBox designer_combo,hairShape;
	JButton btn1, btn2, btn3;
	ButtonGroup group;

	public reserveClient() {	//예약 등록
		super("예약 입력");
		this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		this.setBounds(200, 200, 300, 300);
		this.setLayout(new FlowLayout());

		JPanel panelName = new JPanel();
		JPanel panelNumber = new JPanel();
		JPanel panelRadio = new JPanel();
		JPanel panelDate = new JPanel();
		JPanel panelTime = new JPanel();
		JPanel panelCombo = new JPanel();
		JPanel panelButton = new JPanel();

		panelName.setLayout(new FlowLayout());
		panelNumber.setLayout(new FlowLayout());
		panelRadio.setLayout(new FlowLayout());
		panelTime.setLayout(new FlowLayout());
		panelCombo.setLayout(new FlowLayout());
		panelButton.setLayout(new FlowLayout());
		panelDate.setLayout(new FlowLayout());
		
		caution = new JLabel("당일 예약 불가 최대 1년");
		name = new JLabel("이름 : ");
		number = new JLabel("전화번호 : ");
		time = new JLabel("예약시간 : ");
		designer = new JLabel("미용사 : ");
		hair_shape = new JLabel("머리스타일 : ");
		reyear = new JLabel("연도 : ");
		remon = new JLabel("월 : ");
		reday = new JLabel("일 : ");
		reyear_t = new JTextField(3);
		remon_t = new JTextField(2);
		reday_t = new JTextField(2);
		name_t = new JTextField(10);
		number_t = new JTextField(10);
		designer_combo = new JComboBox();
		time_combo = new JComboBox();
		hairShape = new JComboBox();
		btn1 = new JButton("확인");
		btn2 = new JButton("등록");
		btn3 = new JButton("닫기");
		
		btn1.addActionListener(this);
		btn2.addActionListener(this);
		btn3.addActionListener(this);
		group = new ButtonGroup();
		for (Designer p : DesignerManager.list)		designer_combo.addItem(p.name);
		
		hairShape.addItem("커트(1시간)");
		hairShape.addItem("파마(2시간)");
		hairShape.addItem("염색(3시간)");

		panelName.add(name);
		panelName.add(name_t);
		panelNumber.add(number);
		panelNumber.add(number_t);
		panelCombo.add(designer);
		panelCombo.add(designer_combo);	
		panelTime.add(time);
		panelTime.add(time_combo);
		panelDate.add(reyear);
		panelDate.add(reyear_t);
		panelDate.add(remon);
		panelDate.add(remon_t);
		panelDate.add(reday);
		panelDate.add(reday_t);
		panelCombo.add(hair_shape);
		panelCombo.add(hairShape);
		panelButton.add(btn1);
		panelButton.add(btn2);
		panelButton.add(btn3);
		
		this.add(panelName);
		this.add(panelNumber);
		this.add(panelRadio);
		this.add(panelCombo);
		this.add(panelDate);
		this.add(caution);
		this.add(panelTime);
		this.add(panelButton, BorderLayout.SOUTH);
		this.setVisible(true);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		SimpleDateFormat  year = new SimpleDateFormat("yyyy");	
		SimpleDateFormat  month = new SimpleDateFormat("MM");
		SimpleDateFormat  day = new SimpleDateFormat("dd");
		//today는 현재 날짜 dt는 입력한 날짜
		String choosehairshape = (String) hairShape.getSelectedItem();	//선택한 머리모양
		String Designer = (String) designer_combo.getSelectedItem();	//선택한 디자이너
		int today = Integer.parseInt(year.format(new Date()))*10000+Integer.parseInt(month.format(new Date()))*100+Integer.parseInt(day.format(new Date()));		//문자열을 정수형으로 교체
		if(e.getSource() == btn1) {	//확인을 눌렀을 경우
			time_combo.removeAllItems() ;
			for (Designer p : DesignerManager.list) {
				int st1 = p.starttime;
				int et = p.endtime;
				//머리 종류에 맞게 콤보박스 안의 시간을 조절한다.
				if((hairShape.getSelectedItem()=="커트(1시간)")&&designer_combo.getSelectedItem().equals(p.name)) 	while(st1!=et) time_combo.addItem(st1++);
				else if(hairShape.getSelectedItem()=="파마(2시간)"&&designer_combo.getSelectedItem().equals(p.name))	while((st1+1)<et) time_combo.addItem(st1++);
				else if(hairShape.getSelectedItem()=="염색(3시간)"&&designer_combo.getSelectedItem().equals(p.name))	 while((st1+2)<et) time_combo.addItem(st1++);
			}
			ch++;
		}
		if (e.getSource() == btn2) {	//예약을 눌렀을 경우
			int dt = (Integer.parseInt(reyear_t.getText().toString())*10000)+(Integer.parseInt(remon_t.getText().toString())*100)+(Integer.parseInt(reday_t.getText().toString()));//문자열을 정수로 교체(날짜)
			int it = (int) time_combo.getSelectedItem();
			if(ch!=0) {	//ch의 역할은 확인을 누르기 전까지 실행이 되지 않음
				if((dt<today+10000)&&(dt>today)) {	// 예약 기준일 < 예약날짜 < 예약날짜+ 1년 
					Client s = new Client(name_t.getText().toString().trim(),number_t.getText().toString().trim(), it, Designer,choosehairshape,dt);
					ClientManager.list.add(s);
					name_t.setText(null);
					number_t.setText(null);
					reyear_t.setText(null);remon_t.setText(null);reday_t.setText(null);
				}
			}
		}
		if (e.getSource() == btn3)	dispose();	//뒤로나간다
	}
}

class InputDesigner extends JFrame implements ActionListener {	//미용사 등록
	JLabel name, number,starttime, endtime, caution;	//이름, 사번, 시간
	JTextField name_t, number_t, starttime_t, endtime_t;	//이름 텍스트, 사번 텍스트, 시간 텍스트
	JButton btn1, btn2;	//등록, 뒤로
	ButtonGroup group;	//

	public InputDesigner() {
		super("미용사 입력");

		this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		this.setBounds(200, 200, 250, 300);
		this.setLayout(new FlowLayout());

		JPanel panelName = new JPanel();
		JPanel panelNumber = new JPanel();
		JPanel panelStime = new JPanel();
		JPanel panelEtime = new JPanel();
		JPanel panelButton = new JPanel();

		panelName.setLayout(new FlowLayout());
		panelNumber.setLayout(new FlowLayout());
		panelStime.setLayout(new FlowLayout());
		panelEtime.setLayout(new FlowLayout());
		panelButton.setLayout(new FlowLayout());
		
		caution = new JLabel("10~20시까지 가능");
		name = new JLabel("이름 : ");
		number = new JLabel("사번 : ");
		starttime = new JLabel("시작 시간 : ");
		endtime = new JLabel("마무리 시간 : ");
		
		name_t = new JTextField(10);
		number_t = new JTextField(10);
		starttime_t = new JTextField(2);
		endtime_t = new JTextField(2);
		btn1 = new JButton("등록");
		btn2 = new JButton("닫기");
		btn1.addActionListener(this);
		btn2.addActionListener(this);
		group = new ButtonGroup();
		
		panelName.add(name);		panelName.add(name_t);
		panelNumber.add(number);	panelNumber.add(number_t);
		panelStime.add(starttime);	panelStime.add(starttime_t);
		panelEtime.add(endtime); 	panelEtime.add(endtime_t);
		panelButton.add(btn1);		panelButton.add(btn2);

		this.add(panelName);
		this.add(panelNumber);
		this.add(panelStime);
		this.add(panelEtime);
		this.add(caution);
		this.add(panelButton, BorderLayout.SOUTH);

		this.setVisible(true);

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btn1) {
			int st,et;
			st = Integer.parseInt(starttime_t.getText().toString());	//처음 시간(문자열 ->정수)
			et = Integer.parseInt(endtime_t.getText().toString());		//마감 시간(문자열 ->정수)
			if((st<et)&&(et<=20)&&(st>=10)) {//(10시~20시 사이만 가능 처음 시간이 마감 시간을 넘기면 안됨)
				Designer p = new Designer(name_t.getText().toString().trim(),st,et, number_t.getText().toString().trim());
				DesignerManager.list.add(p);
				name_t.setText(null);
				number_t.setText(null);
				starttime_t.setText(null);
				endtime_t.setText(null);
			}

		}
		if (e.getSource() == btn2) {
			dispose();
		}
	}
}

class Client {	//고객 클래스
	String name, number, designer, hairShape;
	int time, date;

	public Client(String name, String number, int time, String designer, String hairShape, int date) {
		this.name = name;
		this.number = number;
		this.time = time;
		this.designer = designer;
		this.hairShape = hairShape;
		this.date = date;
	}
}
class ClientManager {
	public static ArrayList<Client> list = new ArrayList<Client>();
}

class Designer {
	String name, number;
	int starttime, endtime, date;
	// ArrayList<Client> s = new ArrayList<Client>();
	public Designer(String name, int starttime, int endtime,String number) {
		this.name = name;
		this.number = number;
		this.starttime = starttime;
		this.endtime = endtime;
	}
}
class DesignerManager {
	public static ArrayList<Designer> list = new ArrayList<Designer>();
}
